package io.snyk.labs.actions;

import com.opensymphony.xwork2.ActionSupport;
import org.apache.commons.io.FileUtils;

import java.io.File;
import java.io.IOException;

public class UploadNoVuln extends ActionSupport {
    private File upload;
    private String uploadFileName;
    private String uploadContentType;

    private String USER_DIR = System.getProperty("user.dir");

    // Custom upload logic
    public String execute() throws Exception {
        if (uploadFileName != null) {
            try {
                // Specify the directory where files will be uploaded
                File uploadDirectory = new File(USER_DIR + "/uploads/");

                // Create the destination file
                File destFile = new File(uploadDirectory, uploadFileName);

                if (
                        !destFile.getCanonicalPath().startsWith(uploadDirectory.getCanonicalPath()) ||
                        !upload.getCanonicalPath().startsWith(USER_DIR)
                ) {
                    throw new SecurityException("Attempted path traversal attack");
                }

                // Copy the uploaded file to the destination
                FileUtils.copyFile(upload, destFile);

                // Add message to reflect the exact upload path on the frontend
                addActionMessage("File uploaded successfully to " + destFile.getAbsolutePath());

                return SUCCESS;
            } catch (Exception e) {
                addActionError(e.getMessage());
                e.printStackTrace();
                return ERROR;
            }
        } else {
            return INPUT;
        }
     }

    // Getters and setters
    public File getUpload() {
        return upload;
    }

    public void setUpload(File upload) {
        this.upload = upload;
    }

    public String getUploadFileName() {
        return uploadFileName;
    }

    public void setUploadFileName(String uploadFileName) {
        this.uploadFileName = uploadFileName;
    }

    public String getUploadContentType() {
        return uploadContentType;
    }

    public void setUploadContentType(String uploadContentType) {
        this.uploadContentType = uploadContentType;
    }

}
